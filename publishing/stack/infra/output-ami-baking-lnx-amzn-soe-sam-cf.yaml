AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template creates the SOE baking resources.
Parameters:
  pStackPrefix:
    Type: String
  pAMIPattern:
    Description: Provide the string to match the specific type of AMI to be used.
      e.g "amzn-ami-hvm-????.??.?.????????-x86_64-gp2" This will be used by aws ec2
      describe-images to retrive the latest ami for the SOE Type.
    Type: String
  pAMIOwner:
    Description: Specify the owner of the AMI e.g amazon or aws-marketplace.
    Type: String
  pOSType:
    Description: Operating system type e.g rhel or windows serv
    Type: String
    AllowedValues:
    - rhel
    - serv
    - ubun
    - amzn
  pOS:
    Description: Operating system linux or windows
    Type: String
    AllowedValues:
    - lnx
    - win
  pVulnerabilityExceptionsList:
    Description: CVE Vulnerability exception list
    Type: String
  pOverrideAMI:
    Description: AMI ID to ovveride the latest AMI from the marketplace
    Type: String
  pSlackChannel:
    Type: String
    Description: Slack channel to use
  pSlackURL:
    Type: String
    Description: Slack URL to use
  pSlackIcon:
    Type: String
    Description: Slack icon to use
  pUseSlackIntegration:
    Type: String
    Default: false
    AllowedValues:
    - true
    - false
  pEnvironment:
    Type: String
    Description: Account environment name
  pBuildSchedule:
    Type: String
    Description: 'How often the SOE Build is triggered (Schedule Expression: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)'
  pReleaseSchedule:
    Type: String
    Description: 'How often the SOE Release is triggered (Schedule Expression: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)'
  pVulnerabilityScanDuration:
    Type: Number
    Description: How long the inpsector Vulnerability scan should run for when scanning
      the test hosts. If more than 1200 edit resource -rAutomationDocTestLinuxAMI
      stage -runSleep timeout
  pLogRetentionDays:
    Type: Number
    Description: Number of days to retain logs on automation
  pMemberAccountId:
    Type: String
    Description: Member account ID to share this AMI with. Currently only supporing
      one member accoubnt.
    Default: ''
  pInspecTestFilesBucket:
    Type: String
    Description: ARN of the bucket which contains Inspect Test File
Conditions:
  LnxOS:
    Fn::Equals:
    - Ref: pOS
    - lnx
Resources:
  rCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pStackPrefix}-cw-iam-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - events.amazonaws.com
      Path: /service/
      ManagedPolicyArns:
      - Fn::Sub: arn:aws:iam::${AWS::AccountId}:policy/platform/globaldeny-iam-policy
  rCloudWatchRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${pStackPrefix}-cw-iam-policy
      Path: /service/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
          - Ref: rBuildSOEStateMachine
          - Ref: rReleaseSOEStateMachine
      Roles:
      - Ref: rCloudWatchRole
  rSOEBuildScheduleCronRule:
    Type: AWS::Events::Rule
    Properties:
      Name:
        Fn::Sub: ${pStackPrefix}-build-sf-sm-cw-er
      Description: Rule to tigger SOE Build StepFunction state machine
      ScheduleExpression:
        Fn::Sub: ${pBuildSchedule}
      State: ENABLED
      Targets:
      - Arn:
          Ref: rBuildSOEStateMachine
        Id:
          Fn::Sub: ${pStackPrefix}-build-sf-sm-cw-er
        RoleArn:
          Fn::GetAtt:
          - rCloudWatchRole
          - Arn
  rSOEReleaseScheduleCronRule:
    Type: AWS::Events::Rule
    Properties:
      Name:
        Fn::Sub: ${pStackPrefix}-release-sf-sm-cw-er
      Description: Rule to tigger SOE Release StepFunction state machine
      ScheduleExpression:
        Fn::Sub: ${pReleaseSchedule}
      State: ENABLED
      Targets:
      - Arn:
          Ref: rReleaseSOEStateMachine
        Id:
          Fn::Sub: ${pStackPrefix}-release-sf-sm-cw-er
        RoleArn:
          Fn::GetAtt:
          - rCloudWatchRole
          - Arn
  rStepFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pStackPrefix}-sf-iam-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
          Action: sts:AssumeRole
      Path: /service/
      ManagedPolicyArns:
      - Fn::Sub: arn:aws:iam::${AWS::AccountId}:policy/platform/globaldeny-iam-policy
  rStepFunctionExecutionRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${pStackPrefix}-sf-iam-policy
      Path: /service/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          Resource:
            Fn::Join:
            - ':'
            - - arn:aws:lambda
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - function
              - Fn::Sub: ${pStackPrefix}-*
      Roles:
      - Ref: rStepFunctionExecutionRole
  rBuildSOEStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName:
        Fn::Sub: ${pStackPrefix}-build-sf-sm
      DefinitionString:
        Fn::Sub:
        - "{\n  \"Comment\": \"SOE Baking Solution\",\n  \"StartAt\": \"Set Action\"\
          ,\n  \"States\": {\n    \"Set Action\": {\n      \"Type\": \"Pass\",\n \
          \     \"Result\": \"Build\",\n      \"ResultPath\": \"$.Action\",\n    \
          \  \"Next\": \"Trigger Build\"\n    },\n    \"Trigger Build\": {\n     \
          \ \"Type\": \"Task\",\n      \"TimeoutSeconds\": 300,\n      \"Resource\"\
          : \"${TriggerBuildFunctionArn}\",\n      \"Next\": \"Wait 1 Minutes for\
          \ Build\"\n    },\n    \"Wait 1 Minutes for Build\": {\n      \"Type\":\
          \ \"Wait\",\n      \"Seconds\": 60,\n      \"Next\": \"Get Build Status\"\
          \n    },\n    \"Get Build Status\": {\n      \"Type\": \"Task\",\n     \
          \ \"TimeoutSeconds\": 300,\n      \"Resource\": \"${CheckBuildFuntionArn}\"\
          ,\n      \"Next\": \"Build Status?\"\n    },\n    \"Build Status?\": {\n\
          \      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n        \
          \  \"Variable\": \"$.BuildStatus\",\n          \"StringEquals\": \"failed\"\
          ,\n          \"Next\": \"Notify Failure\"\n        },\n        {\n     \
          \     \"Variable\": \"$.BuildStatus\",\n          \"StringEquals\": \"succeeded\"\
          ,\n          \"Next\": \"Trigger Test\"\n        },\n        {\n       \
          \   \"Variable\": \"$.BuildStatus\",\n          \"StringEquals\": \"running\"\
          ,\n          \"Next\": \"Wait 1 Minutes for Build\"\n        },\n      \
          \  {\n          \"Variable\": \"$.BuildStatus\",\n          \"StringEquals\"\
          : \"unknown\",\n          \"Next\": \"Notify Failure\"\n        }\n    \
          \  ]\n    },\n    \"Notify Failure\": {\n      \"Type\": \"Task\",\n   \
          \   \"TimeoutSeconds\": 300,\n      \"Resource\": \"${NotifyFailureFunctionArn}\"\
          ,\n      \"Next\": \"Build Failed\"\n    },\n    \"Build Failed\": {\n \
          \     \"Type\": \"Fail\",\n      \"Cause\": \"Deployment Failed\",\n   \
          \   \"Error\": \"Deployment Failed\"\n    },\n    \"Trigger Test\": {\n\
          \      \"Type\": \"Task\",\n      \"TimeoutSeconds\": 300,\n      \"Resource\"\
          : \"${TriggerTestFunctionArn}\",\n      \"Next\": \"Wait 1 Minutes for Test\"\
          \n    },\n    \"Wait 1 Minutes for Test\": {\n      \"Type\": \"Wait\",\n\
          \      \"Seconds\": 60,\n      \"Next\": \"Get Test Status\"\n    },\n \
          \   \"Get Test Status\": {\n      \"Type\": \"Task\",\n      \"TimeoutSeconds\"\
          : 300,\n      \"Resource\": \"${CheckTestFunctionArn}\",\n      \"Next\"\
          : \"Test Status?\"\n    },\n    \"Test Status?\": {\n      \"Type\": \"\
          Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.TestStatus\"\
          ,\n          \"StringEquals\": \"failed\",\n          \"Next\": \"Notify\
          \ Failure\"\n        },\n        {\n          \"Variable\": \"$.TestStatus\"\
          ,\n          \"StringEquals\": \"succeeded\",\n          \"Next\": \"Terminate\
          \ Test Instance\"\n        },\n        {\n          \"Variable\": \"$.TestStatus\"\
          ,\n          \"StringEquals\": \"skipped\",\n          \"Next\": \"Terminate\
          \ Test Instance\"\n        },\n        {\n          \"Variable\": \"$.TestStatus\"\
          ,\n          \"StringEquals\": \"running\",\n          \"Next\": \"Wait\
          \ 1 Minutes for Test\"\n        },\n        {\n          \"Variable\": \"\
          $.TestStatus\",\n          \"StringEquals\": \"unknown\",\n          \"\
          Next\": \"Notify Failure\"\n        }\n      ]\n    },\n    \"Terminate\
          \ Test Instance\": {\n      \"Type\": \"Task\",\n      \"TimeoutSeconds\"\
          : 300,\n      \"Resource\": \"${TerminateTestEC2FunctionArn}\",\n      \"\
          Next\": \"Update Next AMI\"\n    },\n    \"Update Next AMI\": {\n      \"\
          Type\": \"Task\",\n      \"TimeoutSeconds\": 300,\n      \"Resource\": \"\
          ${UpdateNextAmiFunctionArn}\",\n      \"Next\": \"Notify Build Success\"\
          \n    },\n    \"Notify Build Success\": {\n      \"Type\": \"Task\",\n \
          \     \"TimeoutSeconds\": 300,\n      \"Resource\": \"${NotifySuccessFunctionArn}\"\
          ,\n      \"Next\": \"Build Succeeded\"\n    },\n    \"Build Succeeded\"\
          : {\n      \"Type\": \"Succeed\"\n    }\n  }\n}"
        - TriggerBuildFunctionArn:
            Fn::GetAtt:
            - rTriggerBuildFunction
            - Arn
          CheckBuildFuntionArn:
            Fn::GetAtt:
            - rCheckBuildFuntion
            - Arn
          NotifyFailureFunctionArn:
            Fn::GetAtt:
            - rNotifyFailureFunction
            - Arn
          TriggerTestFunctionArn:
            Fn::GetAtt:
            - rTriggerTestFunction
            - Arn
          CheckTestFunctionArn:
            Fn::GetAtt:
            - rCheckTestFunction
            - Arn
          TerminateTestEC2FunctionArn:
            Fn::GetAtt:
            - rTerminateTestEC2Function
            - Arn
          UpdateNextAmiFunctionArn:
            Fn::GetAtt:
            - rUpdateNextAmiFunction
            - Arn
          NotifySuccessFunctionArn:
            Fn::GetAtt:
            - rNotifySuccessFunction
            - Arn
      RoleArn:
        Fn::GetAtt:
        - rStepFunctionExecutionRole
        - Arn
  rReleaseSOEStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName:
        Fn::Sub: ${pStackPrefix}-release-sf-sm
      DefinitionString:
        Fn::Sub:
        - "{\n  \"Comment\": \"SOE Release Solution\",\n  \"StartAt\": \"Set Action\"\
          ,\n  \"States\": {\n    \"Set Action\": {\n      \"Type\": \"Pass\",\n \
          \     \"Result\": \"Release\",\n      \"ResultPath\": \"$.Action\",\n  \
          \    \"Next\": \"Manage IAM Role\"\n    },\n    \"Manage IAM Role\": {\n\
          \      \"Type\": \"Task\",\n      \"TimeoutSeconds\": 300,\n      \"Resource\"\
          : \"${ManageIAMRolelambdaArn}\",\n      \"Next\": \"Publish AMI\"\n    },\n\
          \    \"Publish AMI\": {\n      \"Type\": \"Task\",\n      \"TimeoutSeconds\"\
          : 300,\n      \"Resource\": \"${PublishFunctionArn}\",\n      \"Next\":\
          \ \"Purge AMIs\"\n    },\n    \"Purge AMIs\": {\n      \"Type\": \"Task\"\
          ,\n      \"TimeoutSeconds\": 300,\n      \"Resource\": \"${PurgeFunctionArn}\"\
          ,\n      \"Next\": \"Notify Release Success\"\n    },\n    \"Notify Release\
          \ Success\": {\n      \"Type\": \"Task\",\n      \"TimeoutSeconds\": 300,\n\
          \      \"Resource\": \"${NotifySuccessFunctionArn}\",\n      \"Next\": \"\
          Build Succeeded\"\n    },\n    \"Build Succeeded\": {\n      \"Type\": \"\
          Succeed\"\n    }\n  }\n}"
        - ManageIAMRolelambdaArn:
            Fn::GetAtt:
            - rManageIAMRoleFunction
            - Arn
          PublishFunctionArn:
            Fn::GetAtt:
            - rPublishFunction
            - Arn
          PurgeFunctionArn:
            Fn::GetAtt:
            - rPurgeFunction
            - Arn
          NotifySuccessFunctionArn:
            Fn::GetAtt:
            - rNotifySuccessFunction
            - Arn
      RoleArn:
        Fn::GetAtt:
        - rStepFunctionExecutionRole
        - Arn
  rLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service/
      RoleName:
        Fn::Sub: ${pStackPrefix}-lambda-iam-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      - Fn::Sub: arn:aws:iam::${AWS::AccountId}:policy/platform/globaldeny-iam-policy
  rLambdaFunctionRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${pStackPrefix}-lambda-iam-policy
      Path: /service/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:DescribeLogStreams
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:*
          Resource:
          - Fn::Join:
            - ':'
            - - arn:aws:logs
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - log-group:/aws/lambda/*:*:*
          - Fn::Join:
            - ':'
            - - arn:aws:logs
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - log-group:/ami/baking/*:*:*
        - Effect: Allow
          Action:
          - iam:*
          Resource:
          - Fn::Join:
            - ':'
            - - 'arn:aws:iam:'
              - Ref: AWS::AccountId
              - Fn::Sub: role/${pStackPrefix}-*
          - Fn::Join:
            - ':'
            - - 'arn:aws:iam:'
              - Ref: AWS::AccountId
              - Fn::Sub: role/service/${pStackPrefix}-*
          - Fn::Join:
            - ':'
            - - 'arn:aws:iam:'
              - Ref: AWS::AccountId
              - Fn::Sub: policy/${pStackPrefix}-*
          - Fn::Join:
            - ':'
            - - 'arn:aws:iam:'
              - Ref: AWS::AccountId
              - Fn::Sub: policy/service/${pStackPrefix}-*
        - Effect: Allow
          Action:
          - iam:ListRoles
          Resource: '*'
        - Effect: Allow
          Action:
          - ssm:*
          Resource:
          - Fn::Join:
            - ':'
            - - arn:aws:ssm
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - Fn::Sub: '*/${pStackPrefix}-*'
        - Effect: Allow
          Action:
          - ec2:CreateImage
          - ec2:CopyImage
          - ec2:DeregisterImage
          - ec2:DescribeImageAttribute
          - ec2:DescribeImages
          - ec2:DeleteSnapshot
          - ec2:StartInstances
          - ec2:RunInstances
          - ec2:StopInstances
          - ec2:TerminateInstances
          - ec2:DescribeInstanceStatus
          - ec2:DescribeInstances
          - ec2:CreateTags
          - ec2:DeleteTags
          - ec2:DescribeTags
          Resource: '*'
        - Effect: Allow
          Action:
          - ec2:ModifyImageAttribute
          Resource: '*'
        - Effect: Allow
          Action:
          - sns:Publish
          Resource:
          - Fn::Join:
            - ':'
            - - arn:aws:sns
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - Fn::Sub: ${pStackPrefix}-*
          - arn:aws:sns:*:*:Automation*
        - Effect: Allow
          Action:
          - inspector:Describe*
          - inspector:List*
          Resource: '*'
      Roles:
      - Ref: rLambdaFunctionRole
  rManageIAMRoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: manage_role_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/056673c4922e2f999c7a3e59aa47863d
      Environment:
        Variables:
          SolutionNaming:
            Fn::Sub: ${pStackPrefix}
          Region:
            Ref: AWS::Region
          SOEType:
            Fn::Sub: ${pOS}-${pOSType}
          AccountIDs:
            Ref: pMemberAccountId
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-manage-iam-role-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-manage-iam-role-lambda
  rTriggerBuildFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: trigger_build_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/05b71e82e568b8bba7b02e76cce0c5b6
      Environment:
        Variables:
          SolutionNaming:
            Fn::Sub: ${pStackPrefix}
          Region:
            Ref: AWS::Region
          SSMDocument:
            Fn::If:
            - LnxOS
            - Ref: rAutomationDocBuildLinuxAMI
            - Ref: AWS::NoValue
          SOEType:
            Fn::Sub: ${pOS}-${pOSType}
          AMIPattern:
            Fn::Sub: ${pAMIPattern}
          OverrideAMI:
            Fn::Sub: ${pOverrideAMI}
          AMIOwner:
            Fn::Sub: ${pAMIOwner}
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-trigger-build-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-trigger-build-lambda
  rCheckBuildFuntion:
    Type: AWS::Serverless::Function
    Properties:
      Handler: check_build_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/63020365548b49dc46ce8b9816db4ee0
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-check-build-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-check-build-lambda
  rNotifyFailureFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: notify_failure_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/859bfbb4501cdc34834457ba83616299
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          SolutionNaming:
            Fn::Sub: ${pStackPrefix}
          OSType:
            Fn::Sub: ${pOSType}
          OS:
            Fn::Sub: ${pOS}
          SlackChannel:
            Fn::Sub: ${pSlackChannel}
          SlackURL:
            Fn::Sub: ${pSlackURL}
          SlackIcon:
            Fn::Sub: ${pSlackIcon}
          EnableSlackIntegration:
            Fn::Sub: ${pUseSlackIntegration}
          Environment:
            Fn::Sub: ${pEnvironment}
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-notify-failure-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-notify-failure-lambda
  rTriggerTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: trigger_test_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/53a7004993570f4b955587a9045519f4
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          SSMDocument:
            Fn::If:
            - LnxOS
            - Ref: rAutomationDocTestLinuxAMI
            - Ref: AWS::NoValue
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-trigger-test-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-trigger-test-lambda
  rCheckTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: check_test_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/3aa14515767243d8226fac7a83c306b0
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          VulnerabilityExceptionsList:
            Fn::Sub: ${pVulnerabilityExceptionsList}
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-check-test-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-check-test-lambda
  rTerminateTestEC2Function:
    Type: AWS::Serverless::Function
    Properties:
      Handler: terminate_test_ec2_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/b63e62fef15dbb91bd8d613d5fe711aa
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-terminate-test-ec2-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-terminate-test-ec2-lambda
  rUpdateNextAmiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: update_next_ami_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/ba830b15e1ce972d4f2d7eefa41e7938
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          NextAMIParam:
            Ref: rSSMParamNextAMI
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-update-next-ami-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-update-next-ami-lambda
  rPublishFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: publish_ami_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/98aaeba94a6c7c8cad67e33bc65c594f
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          NextAMIParam:
            Ref: rSSMParamNextAMI
          LatestAMIParam:
            Ref: rSSMParamLatestAMI
          AccountIDs:
            Ref: pMemberAccountId
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-publish-ami-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-publish-ami-lambda
  rPurgeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: purge_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/ec64fad86c2b14eccf5b07f0d4c4540b
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          SSMPath:
            Fn::Sub: /${pStackPrefix}/${pOS}-${pOSType}
          SOEType:
            Fn::Sub: ${pOS}-${pOSType}
          SolutionNaming:
            Fn::Sub: ${pStackPrefix}
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-purge-ami-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-purge-ami-lambda
  rNotifySuccessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: notify_success_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/1ba5a6093e8ce096d29f8f890e11c906
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          SolutionNaming:
            Fn::Sub: ${pStackPrefix}
          OSType:
            Fn::Sub: ${pOSType}
          OS:
            Fn::Sub: ${pOS}
          SlackChannel:
            Fn::Sub: ${pSlackChannel}
          SlackURL:
            Fn::Sub: ${pSlackURL}
          SlackIcon:
            Fn::Sub: ${pSlackIcon}
          EnableSlackIntegration:
            Fn::Sub: ${pUseSlackIntegration}
          Environment:
            Fn::Sub: ${pEnvironment}
          VulnerabilityExceptionsList:
            Fn::Sub: ${pVulnerabilityExceptionsList}
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-notify-success-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-notify-success-lambda
  rNotifyCloudwatchFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: notify_cloudwatch_function.lambda_handler
      Runtime: python3.7
      Timeout: 300
      CodeUri: s3://ami-baking-lnx-amzn-soe-stack-src-s3/fda882d6e22546b0dbd40daaeee300ba
      Environment:
        Variables:
          Region:
            Ref: AWS::Region
          SolutionNaming:
            Fn::Sub: ${pStackPrefix}
          OSType:
            Fn::Sub: ${pOSType}
          OS:
            Fn::Sub: ${pOS}
          SlackChannel:
            Fn::Sub: ${pSlackChannel}
          SlackURL:
            Fn::Sub: ${pSlackURL}
          SlackIcon:
            Fn::Sub: ${pSlackIcon}
          EnableSlackIntegration:
            Fn::Sub: ${pUseSlackIntegration}
          Environment:
            Fn::Sub: ${pEnvironment}
      Role:
        Fn::GetAtt:
        - rLambdaFunctionRole
        - Arn
      FunctionName:
        Fn::Sub: ${pStackPrefix}-notify-cloudwatch-lambda
      Tags:
        name:
          Fn::Sub: ${pStackPrefix}-notify-cloudwatch-lambda
  rSSMParamNextAMI:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: /${pStackPrefix}/${pOS}-${pOSType}/nextAmi
      Description: AMI ID for the latest AMI build for the next release
      Type: String
      Value: blank
  rSSMParamLatestAMI:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: /${pStackPrefix}/${pOS}-${pOSType}/latestAmi
      Description: AMI ID for the latest AMI released
      Type: String
      Value: blank
  rSSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /service/
      Roles:
      - Ref: rSSMInstanceRole
      InstanceProfileName:
        Fn::Sub: ${pStackPrefix}-ssm-instance-iam-role
  rSSMInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service/
      RoleName:
        Fn::Sub: ${pStackPrefix}-ssm-instance-iam-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      - Fn::Sub: arn:aws:iam::${AWS::AccountId}:policy/platform/globaldeny-iam-policy
      Policies:
      - PolicyName: S3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
            - Fn::Sub: arn:aws:s3:::${pInspecTestFilesBucket}
            - Fn::Sub: arn:aws:s3:::${pInspecTestFilesBucket}/*
  rSSMInstanceRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${pStackPrefix}-ssm-instance-iam-policy
      Path: /service/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricData
          - ec2:DescribeInstanceStatus
          - logs:*
          - ssm:*
          - ec2messages:*
          - s3:PutObject
          - s3:GetObject
          - s3:AbortMultipartUpload
          - s3:ListMultipartUploadParts
          - s3:ListBucket
          - s3:ListBucketMultipartUploads
          - ec2:CreateTags
          - inspector:StartAssessmentRun
          Resource: '*'
      Roles:
      - Ref: rSSMInstanceRole
  rInspectorResourceGroup:
    Type: AWS::Inspector::ResourceGroup
    Condition: LnxOS
    Properties:
      ResourceGroupTags:
      - Key: Scanning
        Value:
          Fn::Sub: ${pStackPrefix}-latest
  rInspectorAssessmentTarget:
    Type: AWS::Inspector::AssessmentTarget
    Condition: LnxOS
    Properties:
      AssessmentTargetName:
        Fn::Sub: ${pStackPrefix}-i-target
      ResourceGroupArn:
        Fn::GetAtt:
        - rInspectorResourceGroup
        - Arn
  rInspectorAssessmentTemplate:
    Type: AWS::Inspector::AssessmentTemplate
    Condition: LnxOS
    Properties:
      AssessmentTargetArn:
        Fn::GetAtt:
        - rInspectorAssessmentTarget
        - Arn
      AssessmentTemplateName:
        Fn::Sub: ${pStackPrefix}-i-template
      DurationInSeconds:
        Fn::Sub: ${pVulnerabilityScanDuration}
      RulesPackageArns:
      - arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-D5TGAxiR
      - arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-P8Tel2Xj
      - arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-Vkd2Vxjq
      - arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-asL6HRgN
  rCmdDocUpdateOS:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Updates the OS using Amazon provided aws-update-linux-instance
          script (Linux Instance only)
        parameters:
          PreUpdateScript:
            type: String
            description: (Optional) URL of a script to run before updates are applied.
              Default (\"none\") is to not run a script.
            default: none
          PostUpdateScript:
            type: String
            description: (Optional) URL of a script to run after package updates are
              applied. Default (\"none\") is to not run a script.
            default: none
          IncludePackages:
            type: String
            description: (Optional) Only update these named packages. By default (\"all\"),
              all available updates are applied.
            default: none
          ExcludePackages:
            type: String
            description: (Optional) Names of packages to hold back from updates, under
              all conditions. By default (\"none\"), no package is excluded.
            default: none
        mainSteps:
        - name: updateOS
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e
            - '[ -x "$(which wget)" ] && get_contents=''wget $1 -O -'''
            - '[ -x "$(which curl)" ] && get_contents=''curl -s -f $1'''
            - eval $get_contents https://aws-ssm-downloads-us-east-1.s3.amazonaws.com/scripts/aws-update-linux-instance
              > /var/lib/amazon/ssm/aws-update-linux-instance
            - chmod +x /var/lib/amazon/ssm/aws-update-linux-instance
            - /var/lib/amazon/ssm/aws-update-linux-instance --pre-update-script '{{PreUpdateScript}}'
              --post-update-script '{{PostUpdateScript}}' --include-packages '{{IncludePackages}}'
              --exclude-packages '{{ExcludePackages}}' 2>&1 | tee /tmp/aws-update-linux-instance.log
            - rm -rf /var/lib/amazon/ssm/aws-update-linux-instance
            - echo 'ssm-agent:'
            - yum info amazon-ssm-agent | grep Version
            - echo 'Python:'
            - python --version
            - echo
            - echo 'yum list available:'
            - yum list available
  rCmdDocInstallCodeDeploy:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Installs the CodeDeploy Agent
        mainSteps:
        - name: installCodeDeploy
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e
            - echo 'Installing CodeDeploy Agent...'
            - sudo yum install -y ruby
            - cd ~
            - wget https://aws-codedeploy-ap-southeast-2.s3.amazonaws.com/latest/install
            - chmod +x ./install
            - sudo ./install auto
            - sudo service codedeploy-agent status
            - yum info codedeploy-agent | grep Version
            - rm ./install
  rCmdDocSetupBanner:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Sets up a login banner in the instance
        mainSteps:
        - name: configureBanner
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e
            - echo CgpGaWdodCBCdWdzICAgICAgICAgICAgICAgICAgICAgIHwgICAgIHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXF9WXy8vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXC89fD1cLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbPXY9XQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX19cX19fL19fX19fCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8uLlsgIF9fX19fICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL18gIFsgWyAgTSAvXSBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLi4vLlsgWyBNIC9AXSBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwtLT5bX1sgW00gL0AvXSBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgLy4uLyBbLlsgWyAvQC8gXSBdCiAgICAgX19fX19fX19fX19fX19fX19dXCAvX18vICBbX1sgWy9ALyBDXSBdCiAgICA8X19fX19fX19fX19fX19fX18+PjAtLS1dICBbPVwgXEAvIEMgLyAvCiAgICAgICBfX18gICAgICBfX18gICBdLzAwMG8gICAvX19cIFwgQyAvIC8KICAgICAgICAgIFwgICAgLyAgICAgICAgICAgICAgLy4uLi5cIFxfLyAvCiAgICAgICAuLi4uXHx8Ly4uLi4gICAgICAgICAgIFtfX18vPVxfX18vCiAgICAgIC4gICAgLiAgLiAgICAuICAgICAgICAgIFsuLi5dIFsuLi5dCiAgICAgLiAgICAgIC4uICAgICAgLiAgICAgICAgIFtfX18vIFxfX19dCiAgICAgLiAgICAwIC4uIDAgICAgLiAgICAgICAgIDwtLS0+IDwtLS0+CiAgL1wvXC4gICAgLiAgLiAgICAuL1wvXCAgICAgIFsuLl0gICBbLi5dCiAvIC8gLyAuLi4vfCAgfFwuLi4gXCBcIFwgICAgX1tfX10gICBbX19dXwovIC8gLyAgICAgICBcLyAgICAgICBcIFwgXCAgW19fX18+ICAgPF9fX19dCgogKioqIEJ1aWx0IGZyb20gQ0lTIEFtYXpvbiBMaW51eCAyIEFNSSAqKioKClRoaXMgY29tcHV0ZXIgc3lzdGVtIGlzIGZvciBhdXRob3JpemVkIHVzZSBvbmx5LgpBbGwgYWN0aXZpdHkgaXMgbG9nZ2VkIGFuZCByZWd1bGFybHkgY2hlY2tlZCBieQp0aGUgUGxhdGZvcm0gVGVhbS4gQW55IHVuYXV0aG9yaXplZCBhY3Rpdml0eSB3aXRoCnRoZSBzeXN0ZW0gb3IgdGhlIG5ldHdvcmsgd2lsbCBiZSByZXBvcnRlZC4KCkJ1ZyBSZXBvcnQ6IFBsZWFzZSByYWlzZSBhIEpJUkEgVGlja2V0IHdpdGggdGhlIFBsYXRmb3JtIFRlYW0KCg==
              | base64 --decode > /etc/motd
            - sudo chown root:root /etc/motd
            - sudo update-motd --disable
  rCmdDocInstallCorretto:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Installs Corretto JRE Runtime
        mainSteps:
        - name: installAWSCorretto
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e
            - echo 'Install java (AWS Corretto JRE)'
            - sudo amazon-linux-extras enable corretto8
            - sudo yum install -y java-1.8.0-amazon-corretto
  rSetupInSpecRequirements:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Setup Inspec Test Requirements
        mainSteps:
        - name: setupInspecRequirements
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e
            - echo 'Cleaning up the gems...'
            - sudo gem cleanup
            - sudo gem list
  rCmdDocOutputVersion:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Output Softwares Versions
        mainSteps:
        - name: outputVersion
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e -x
            - ec2-metadata -i
            - codedeploy=$(yum info codedeploy-agent | grep Version)
            - echo "CodeDeploy Agent $codedeploy"
            - ssm=$(yum info amazon-ssm-agent | grep Version)
            - echo "SSM Agent $ssm"
            - awslogs=$(yum info awslogs | grep Version)
            - echo "CloudWatch Agent $awslogs"
            - inspector=$(yum info awsagent | grep Version)
            - echo "Inspector Agent $inspector"
            - corretto=$(yum info java-1.8.0-amazon-corretto-devel | grep Version)
            - echo "AWS Corretto $corretto"
            - kernel=$(uname -r)
            - echo "Kernel Version $kernel"
  rAutomationDocBuildLinuxAMI:
    Type: AWS::SSM::Document
    Condition: LnxOS
    Properties:
      DocumentType: Automation
      Content:
        description: "Systems Manager Automation \u2013 Patch AMI and Update SSM Param"
        schemaVersion: '0.3'
        parameters:
          sourceAMIid:
            type: String
            description: AMI to patch
          InstanceIamRole:
            type: String
            description: (Required) The name of the instance profile that enables
              Systems Manager (SSM) to manage the instance.
            default:
              Ref: rSSMInstanceProfile
          InstanceType:
            type: String
            description: (Required) Type of instance to launch as the workspace host.
              Instance types vary by region. Default is m5.large.
            default: m5.large
          PreUpdateScript:
            type: String
            description: (Optional) URL of a script to run before updates are applied.
              Default (\"none\") is to not run a script.
            default: none
          PostUpdateScript:
            type: String
            description: (Optional) URL of a script to run after package updates are
              applied. Default (\"none\") is to not run a script.
            default: none
          IncludePackages:
            type: String
            description: (Optional) Only update these named packages. By default (\"all\"),
              all available updates are applied.
            default: all
          ExcludePackages:
            type: String
            description: (Optional) Names of packages to hold back from updates, under
              all conditions. By default (\"none\"), no package is excluded.
            default: none
          SolutionSOEType:
            type: String
            description: (Required) Solution and SOE Type name.
            default:
              Fn::Sub: ${pStackPrefix}
        mainSteps:
        - name: startInstances
          action: aws:runInstances
          timeoutSeconds: 1200
          maxAttempts: 1
          onFailure: Abort
          inputs:
            ImageId: '{{ sourceAMIid }}'
            InstanceType: '{{ InstanceType }}'
            UserData: IyEvYmluL2Jhc2gNCg0KZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgew0KICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4NCiAgICAgICAgY3VybCAtcyAtZiAiJDEiDQogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuDQogICAgICAgIHdnZXQgIiQxIiAtTyAtDQogICAgZWxzZQ0KICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIg0KICAgIGZpDQp9DQoNCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIg0KcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHMgIiRJREVOVElUWV9VUkwiIHwgYXdrIC1GXCIgJy9yZWdpb24vIHsgcHJpbnQgJDQgfScpDQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIg0KcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059Ig0KDQpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50Ig0KcmVhZG9ubHkgU0NSSVBUX1VSTD0iaHR0cHM6Ly9hd3Mtc3NtLWRvd25sb2Fkcy0kUkVHSU9OLnMzLmFtYXpvbmF3cy5jb20vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQoNCmNkIC90bXANCkZJTEVfU0laRT0wDQpNQVhfUkVUUllfQ09VTlQ9Mw0KUkVUUllfQ09VTlQ9MA0KDQp3aGlsZSBbICRSRVRSWV9DT1VOVCAtbHQgJE1BWF9SRVRSWV9DT1VOVCBdIDsgZG8NCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IERvd25sb2FkaW5nIHNjcmlwdCBmcm9tICRTQ1JJUFRfVVJMDQogIGdldF9jb250ZW50cyAiJFNDUklQVF9VUkwiID4gIiRTQ1JJUFRfTkFNRSINCiAgRklMRV9TSVpFPSQoZHUgLWsgL3RtcC8kU0NSSVBUX05BTUUgfCBjdXQgLWYxKQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmluaXNoZWQgZG93bmxvYWRpbmcgc2NyaXB0LCBzaXplOiAkRklMRV9TSVpFDQogIGlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogICAgYnJlYWsNCiAgZWxzZQ0KICAgIGlmIFtbICRSRVRSWV9DT1VOVCAtbHQgTUFYX1JFVFJZX0NPVU5UIF1dOyB0aGVuDQogICAgICBSRVRSWV9DT1VOVD0kKChSRVRSWV9DT1VOVCsxKSk7DQogICAgICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmlsZVNpemUgaXMgMCwgcmV0cnlDb3VudDogJFJFVFJZX0NPVU5UDQogICAgZmkNCiAgZmkgDQpkb25lDQoNCmlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogIGNobW9kICt4ICIkU0NSSVBUX05BTUUiDQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBSdW5uaW5nIFVwZGF0ZVNTTUFnZW50IHNjcmlwdCBub3cgLi4uLg0KICAuLyIkU0NSSVBUX05BTUUiIC0tcmVnaW9uICIkUkVHSU9OIg0KZWxzZQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogVW5hYmxlIHRvIGRvd25sb2FkIHNjcmlwdCwgcXVpdHRpbmcgLi4uLg0KZmkNCg==
            MinInstanceCount: 1
            MaxInstanceCount: 1
            IamInstanceProfileName: '{{ InstanceIamRole }}'
            TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: SOE-Build-AMI
        - name: updateOS
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rCmdDocUpdateOS
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: installInspectorAgent
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName: AmazonInspector-ManageAWSAgent
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            Parameters:
              Operation: Install
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: installCodeDeployAgent
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rCmdDocInstallCodeDeploy
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: installCloudWatchAgent
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName: AWS-ConfigureAWSPackage
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            Parameters:
              name: AmazonCloudWatchAgent
              action: Install
              version: latest
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: setupIPTablesAllowAll
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName: AWS-RunShellScript
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            Parameters:
              commands:
              - set -e -x
              - echo 'Allowing all traffic from IP tables...'
              - sudo iptables -P INPUT ACCEPT
              - echo 'Saving IPv4 configuration...'
              - sudo sh -c 'iptables-save > /etc/sysconfig/iptables'
              - echo 'Making changes permanent...'
              - sudo systemctl enable iptables.service
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: configureLoginBanner
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rCmdDocSetupBanner
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: installCorrettoJava
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rCmdDocInstallCorretto
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: listSoftwaresVersions
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rCmdDocOutputVersion
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationBuildLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: stopInstance
          action: aws:changeInstanceState
          maxAttempts: 1
          onFailure: Abort
          inputs:
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            DesiredState: stopped
        - name: createImage
          action: aws:createImage
          maxAttempts: 1
          onFailure: Abort
          inputs:
            InstanceId: '{{ startInstances.InstanceIds }}'
            ImageName: '{{SolutionSOEType}} - {{global:DATE_TIME}}'
            NoReboot: true
            ImageDescription: Platform Maintained SOE Image (From Source {{sourceAMIid}})
              Build {{automation:EXECUTION_ID}}
        - name: createTags
          action: aws:createTags
          maxAttempts: 1
          onFailure: Abort
          inputs:
            ResourceType: EC2
            ResourceIds:
            - '{{ createImage.ImageId }}'
            Tags:
            - Key: SoeType
              Value: '{{SolutionSOEType}}'
            - Key: SourceAMIid
              Value: '{{sourceAMIid}}'
            - Key: DateCreated
              Value: '{{global:DATE_TIME}}'
            - Key: SSMExecutionID
              Value: '{{automation:EXECUTION_ID}}'
        - name: terminateInstance
          action: aws:changeInstanceState
          maxAttempts: 1
          onFailure: Abort
          inputs:
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            DesiredState: terminated
        outputs:
        - createImage.ImageId
        - startInstances.InstanceIds
  rCmdDocRunVulnerabilityScan:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Runs a vulnerability scan
        parameters:
          InstanceTag:
            type: String
            description: EC2 Instance Tags
          sourceAMIid:
            type: String
            description: Source AMI
          InspectorAssessmentTemplateArn:
            type: String
            description: ARN of the Inspector Template
          Region:
            type: String
            description: Assessment Region
            default: ap-southeast-2
        mainSteps:
        - name: runVulnerabilityScan
          action: aws:runShellScript
          precondition:
            StringEquals:
            - platformType
            - Linux
          inputs:
            runCommand:
            - set -e
            - '[ -x "$(which wget)" ] && get_contents=''wget $1 -O -'''
            - '[ -x "$(which curl)" ] && get_contents=''curl -s -f $1'''
            - export instance_id=$(eval $get_contents http://169.254.169.254/latest/meta-data/instance-id)
            - aws ec2 create-tags --resources $instance_id --tags Key=Scanning,Value='{{
              InstanceTag }}' --region '{{ Region }}'
            - aws inspector start-assessment-run --assessment-run-name {{ sourceAMIid
              }}_$instance_id --assessment-template-arn '{{ InspectorAssessmentTemplateArn
              }}' --region '{{ Region }}' --query 'assessmentRunArn'
  rAutomationDocTestLinuxAMI:
    Type: AWS::SSM::Document
    Condition: LnxOS
    Properties:
      DocumentType: Automation
      Content:
        description: "Systems Manager Automation \u2013 Patch AMI and Update SSM Param"
        schemaVersion: '0.3'
        parameters:
          sourceAMIid:
            type: String
            description: AMI to Test
          InstanceIamRole:
            type: String
            description: (Required) The name of the instance profile that enables
              Systems Manager (SSM) to manage the instance.
            default:
              Ref: rSSMInstanceProfile
          InstanceType:
            type: String
            description: (Optional) Type of instance to launch as the workspace host.
              Instance types vary by region. Default is m5.large.
            default: m5.large
          InstanceTag:
            type: String
            description: (Required) The EC2 instance tag set for instance and used
              by Inspector to scan the instance
            default:
              Fn::Sub: ${pStackPrefix}-latest
          InspectorAssessmentTemplateArn:
            type: String
            description: (Required) The ARN for the assement template used by inspector
            default:
              Fn::GetAtt:
              - rInspectorAssessmentTemplate
              - Arn
          InspecFilePath:
            type: String
            description: (Required) The file path to the Inspec test
            default:
              Fn::Sub: '{"path":"https://s3-ap-southeast-2.amazonaws.com/${pInspecTestFilesBucket}/inspec/linux_soe_compliance.rb"}'
          Region:
            type: String
            description: (Required) Local AWS region
            default:
              Ref: AWS::Region
          SleepDuration:
            type: String
            description: The amount of time the SSM automation needs to wait so that
              the Vulnerability scan can complete
            default:
              Fn::Sub: ${pVulnerabilityScanDuration}
        mainSteps:
        - name: startInstances
          action: aws:runInstances
          timeoutSeconds: 1200
          maxAttempts: 1
          onFailure: Abort
          inputs:
            ImageId: '{{ sourceAMIid }}'
            InstanceType: '{{ InstanceType }}'
            UserData: IyEvYmluL2Jhc2gNCg0KZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgew0KICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4NCiAgICAgICAgY3VybCAtcyAtZiAiJDEiDQogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuDQogICAgICAgIHdnZXQgIiQxIiAtTyAtDQogICAgZWxzZQ0KICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIg0KICAgIGZpDQp9DQoNCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIg0KcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHMgIiRJREVOVElUWV9VUkwiIHwgYXdrIC1GXCIgJy9yZWdpb24vIHsgcHJpbnQgJDQgfScpDQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIg0KcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059Ig0KDQpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50Ig0KcmVhZG9ubHkgU0NSSVBUX1VSTD0iaHR0cHM6Ly9hd3Mtc3NtLWRvd25sb2Fkcy0kUkVHSU9OLnMzLmFtYXpvbmF3cy5jb20vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQoNCmNkIC90bXANCkZJTEVfU0laRT0wDQpNQVhfUkVUUllfQ09VTlQ9Mw0KUkVUUllfQ09VTlQ9MA0KDQp3aGlsZSBbICRSRVRSWV9DT1VOVCAtbHQgJE1BWF9SRVRSWV9DT1VOVCBdIDsgZG8NCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IERvd25sb2FkaW5nIHNjcmlwdCBmcm9tICRTQ1JJUFRfVVJMDQogIGdldF9jb250ZW50cyAiJFNDUklQVF9VUkwiID4gIiRTQ1JJUFRfTkFNRSINCiAgRklMRV9TSVpFPSQoZHUgLWsgL3RtcC8kU0NSSVBUX05BTUUgfCBjdXQgLWYxKQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmluaXNoZWQgZG93bmxvYWRpbmcgc2NyaXB0LCBzaXplOiAkRklMRV9TSVpFDQogIGlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogICAgYnJlYWsNCiAgZWxzZQ0KICAgIGlmIFtbICRSRVRSWV9DT1VOVCAtbHQgTUFYX1JFVFJZX0NPVU5UIF1dOyB0aGVuDQogICAgICBSRVRSWV9DT1VOVD0kKChSRVRSWV9DT1VOVCsxKSk7DQogICAgICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmlsZVNpemUgaXMgMCwgcmV0cnlDb3VudDogJFJFVFJZX0NPVU5UDQogICAgZmkNCiAgZmkgDQpkb25lDQoNCmlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogIGNobW9kICt4ICIkU0NSSVBUX05BTUUiDQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBSdW5uaW5nIFVwZGF0ZVNTTUFnZW50IHNjcmlwdCBub3cgLi4uLg0KICAuLyIkU0NSSVBUX05BTUUiIC0tcmVnaW9uICIkUkVHSU9OIg0KZWxzZQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogVW5hYmxlIHRvIGRvd25sb2FkIHNjcmlwdCwgcXVpdHRpbmcgLi4uLg0KZmkNCg==
            MinInstanceCount: 1
            MaxInstanceCount: 1
            IamInstanceProfileName: '{{ InstanceIamRole }}'
            TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: SOE-Test-AMI
        - name: runVulnerabilityScan
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rCmdDocRunVulnerabilityScan
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            Parameters:
              InstanceTag: '{{ InstanceTag }}'
              sourceAMIid: '{{ sourceAMIid }}'
              InspectorAssessmentTemplateArn: '{{ InspectorAssessmentTemplateArn }}'
              Region: '{{ Region }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationTestLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: setupInSpecRequirements
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 1800
          onFailure: Abort
          inputs:
            DocumentName:
              Ref: rSetupInSpecRequirements
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationTestLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        - name: runInSpecTests
          action: aws:runCommand
          maxAttempts: 1
          timeoutSeconds: 600
          onFailure: Abort
          inputs:
            DocumentName: AWS-RunInspecChecks
            InstanceIds:
            - '{{ startInstances.InstanceIds }}'
            Parameters:
              sourceType: S3
              sourceInfo: '{{ InspecFilePath }}'
            CloudWatchOutputConfig:
              CloudWatchLogGroupName:
                Ref: rAutomationTestLinuxAMILogGroup
              CloudWatchOutputEnabled: true
        outputs:
        - runVulnerabilityScan.Output
        - runInSpecTests.Output
        - startInstances.InstanceIds
  rAutomationBuildLinuxAMILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /ami/baking/${pStackPrefix}-build-lg
      RetentionInDays:
        Ref: pLogRetentionDays
  rAutomationTestLinuxAMILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /ami/baking/${pStackPrefix}-test-lg
      RetentionInDays:
        Ref: pLogRetentionDays
  rLoggingMonitoringOpsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.ap-southeast-2.amazonaws.com/ami-baking-lnx-amzn-soe-stack-src-s3/3dbba8761a0a796caa63b0ff9af50d8b.template
      Parameters:
        pStackPrefix:
          Ref: pStackPrefix
        pSOEBuildStateMachineArn:
          Ref: rBuildSOEStateMachine
        pSOEReleaseStateMachineArn:
          Ref: rReleaseSOEStateMachine
        pNotifyCloudwatchFunctionArn:
          Fn::GetAtt:
          - rNotifyCloudwatchFunction
          - Arn
        pLatestAMIParameter:
          Ref: rSSMParamLatestAMI
        pMemberAccountId:
          Ref: pMemberAccountId
